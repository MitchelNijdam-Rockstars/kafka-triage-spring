package com.mnijdam.kafkatriage.bdobjekts
import com.mnijdam.kafkatriage.bdobjekts.public.Header
import com.mnijdam.kafkatriage.bdobjekts.public.Record

/**  
 * Auto-generated metadata object. Provides a list of unique aliases for each table across all schemas in the catalog. These are used in the SQL that db-Objekts generates.
 *
 * Do not edit this file manually! Always use [com.dbobjekts.codegen.CodeGenerator] when the metadata model is no longer in sync with the database.
 *
 * You can import the individual values of in this object in your code to use them as convenient shortcuts.
 *
 * ```
 * import com.mnijdam.kafkatriage.bdobjekts.Aliases.e
 * [...]
 * transaction.select(e.name)
 *```
 */        
object Aliases : HasAliases {
    override val h = Header
    override val r = Record
}

/**  
 * Auto-generated metadata object. Interface for a list of unique aliases for each table across all schemas in the catalog.
 *
 * Do not edit this file manually! Always use [com.dbobjekts.codegen.CodeGenerator] when the metadata model is no longer in sync with the database.
 *
 * Any class can extends this interface and delegate to the Aliases object. This imports all the shortcuts without the need for separate manual import statements 
 *
 * ```
 * import com.mnijdam.kafkatriage.bdobjekts.Aliases
 * import com.mnijdam.kafkatriage.bdobjekts.HasAliases
 * [...]
 * class AcmeDbInteractions : HasAliases by Aliases {
 *  transaction.select(e.name, a.id, ea.kind)
 * }
 *```
 */ 
interface HasAliases {
    val h : Header
    val r : Record
}
     